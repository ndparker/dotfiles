# Example config file for `aws role`
# Rename this to role.config, it will be picked up by cli/role.sh then
# Once modified with real data, DO NOT CHECK IN THIS FILE.
#
# aws role makes a selected profile default and triggers a login if needed.
#
# The following cases are covered:
# * SSO profiles
# * Role profiles (based on SSO or IAM users)
# * IAM User profiles
#
# IAM users need access keys credentials and are logged in using session tokens.
# SSO users are logged in using SSO (needs awscli v2)

# You can mix and match.


# SSO based setup
# ===========================================
# in ~/.aws/config:
#
#   [sso-session <sso-name>]
#   sso_start_url = https://<your-sso-account>.awsapps.com/start
#   sso_region = <your-sso-region>
#   sso_registration_scopes = sso:account:access
#
#   # `aws role <some-name>`
#   [profile <some-name>]
#   sso_session = <sso-name>
#   sso_account_id = <aws-account-id>
#   sso_role_name = <role-name>
#   # optional:
#   region = <default-region>
#
#   # a role in account defined by <some-name> profile
#   # `aws role <other-name>`
#   [profile <other-name>]
#   role_arn = arn:aws:iam::<account-id>:role/<role-name>
#   source_profile = <some-name>

# IAM based setup
# ===========================================================
# in ~/.aws/config

#   # completely optional for simple IAM user access, just for defaults
#   # `aws role <name-x>`
#   [profile <name-x>]
#   region = eu-central-1
#   
#   # `aws role <yet-anothr-name>`
#   [profile <yet-anothr-name>]
#   role_arn = arn:aws:iam::<account-id>:role/<role-name>
#   source_profile = <name-x>

# in ~/.aws/credentials

#   # The [<name-x>] profile will be filled by `aws role <name-x>`
#   [user@<name-x>]
#   aws_access_key_id = <your-key>
#   aws_secret_access_key = <your-secret-key>


# Extra configurations
# ===========================================================

# The profile to pick if no profile is passed.
# It can be empty, in which case you always have to pass a profile to `aws role`
default_profile=

# Enforce an MFA token on IAM login. This can be overridden on a profile by
# profile basis, see below.
# Set to empty do disable default MFA force
mfa_force=1

# Settings per profile
# ===========================================================

# All characters in the profile name, which don't fit into [a-z0-9_] are
# turned into _ for variable resolution here:


# Set to empty do disable MFA force for specific account
# mfa_<profile-name>_force=1

# Set to your MFA name if it's different from your username
# mfa_<profile-name>_name=


# vim: nowrap
